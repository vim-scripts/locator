*locator.txt* 

Plugin that shows you full "path" to the cursor, including folds, classes,
functions, and more.

There are already several plugins that show you name of the
function that cursor is currently in, but I want to see full "path" to the
cursor, including folds, classes, and maybe comment sections.

              For Vim 7.x version



                     By Dmitry Frank
                  dimon.frank@gmail.com

Firstly: if you have any questions about this plugin, feel free
to email me: dimon.frank@gmail.com


                                                                 *locator*

   Contents:

     Overview..................................|locator-overview|
     Options....................................|locator-options|
     Mappings..................................|locator-mappings|
     Known issues..........................|locator-known-issues|



========================================================================
OVERVIEW                                                *locator-overview*

Plugin that shows you full "path" to the cursor, including folds, classes,
functions, and more.

There are already several plugins on www.vim.org that show you name of the
function that cursor is currently in, but I want to see full "path" to the
cursor, including folds, classes, and maybe comment sections.
Currently the following filetypes are supported: 

      c, java, vim, cpp (last one is not carefully tested, but seems to work too)


By "comment section" I mean something like that: >

   /****************************************************************
    *  MY SECTION
    ***************************************************************/

Plugin detects folds by marks, like that: >

   My fold name   {{{
   }}}

After all, it detects classes and functions.  When you want to know where are
your cursor, all you need is type   gl  (from "get location") in normal mode,
and locator will show you where you are, like that: >

   5: --- Fold one ---
  14:   --- Subfold two ---
  16:     int test_func_2(int param)

You can check out several screenshots: 
   http://goo.gl/nFW8S (test C file with folds and functions)
   http://goo.gl/GRMAB (test C file with comment sections, folds and functions)
   http://goo.gl/9rVfJ (Java file with sections, functions and nested classes)
   http://goo.gl/fTjpF (C file with folds, sections and functions)

This plugin is extremely helpful in large files, especially in Java classes
with nested classes, etc. Hope you like it too.

This plugin is completely usable, but just keep in mind it is still in
development stage. See |locator-known-issues|.

========================================================================
OPTIONS                                                  *locator-options*

g:locator_hl_fold (default: "Folded")
   
   Shows how locator should highlight folds in the path. See |:echohl|


g:locator_hl_class (default: "NonText")
   
   Shows how locator should highlight classes in the path. See |:echohl|


g:locator_hl_func_name (default: "Directory")
   
   Shows how locator should highlight function name in the path. See |:echohl|


g:locator_hl_func_the_rest (default: "Normal")
   
   Shows how locator should highlight function details in the path (except
   name). See |:echohl|


g:locator_hl_section (default: "ModeMsg")
   
   Shows how locator should highlight comment sections in the path. See |:echohl|

g:locator_disable_mappings (default: 0)
   
   Set it to 1 if you don't want for default mappings ( which is just one
         mapping:   gl )


========================================================================
MAPPINGS                                                *locator-mappings*

Currently just one mapping is available:  gl  (from "get location"). Type it
in normal mode and locator will show you where currently are your cursor.


========================================================================
KNOWN ISSUES                                        *locator-known-issues*

1) If your file contains folds, then after   gl   command some of your closed
   folds might become opened. Too bad that Vim doesn't have good method to
   save/restore folds state. I have an idea how to workaround that, but I'm not
   sure when I have time.

2) Again for files contains folds: after   gl   command your buffer might become
   scrolled up to several lines. Cursor position won't change anyway. Actually
   this is consequence from previous issue, so, when I fix it, this one will be
   fixed too.


 vim:ft=help:tw=78:  
